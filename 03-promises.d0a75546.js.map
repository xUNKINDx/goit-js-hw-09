{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFM,YAAW,KACTF,EAAQ,C,SAAEN,E,MAAUC,GAAQ,GAC3BA,GAEHO,YAAW,KACTD,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CAzCFQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAA6BC,GAC3BA,EAAMC,iBACN,MACEC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cAEV,IAAIC,EAAeC,SAASL,EAAMM,OAClC,MAAMC,EAAYF,SAASJ,EAAKK,OAC1BE,EAAcH,SAASH,EAAOI,OAEpC,IACE,IAAIG,EAAkB,EACtBA,GAAmBD,EACnBC,IAEAzB,EAAcyB,EAAiBL,GAC5BM,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA6B,OAAOC,QAAQ,uBAAqB3B,QAAiBC,MAAU,IAEhE2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA6B,OAAOG,QAAQ,sBAAoB7B,QAAeC,MAAU,IAEhEkB,GAAgBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmitHandler);\n\nfunction onFormSubmitHandler(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let currentDelay = parseInt(delay.value);\n  const stepValue = parseInt(step.value);\n  const amountValue = parseInt(amount.value);\n\n  for (\n    let currentPosition = 1;\n    currentPosition <= amountValue;\n    currentPosition++\n  ) {\n    createPromise(currentPosition, currentDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    currentDelay += stepValue;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    } else {\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    }\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","currentDelay","parseInt","value","stepValue","amountValue","currentPosition","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.d0a75546.js.map"}